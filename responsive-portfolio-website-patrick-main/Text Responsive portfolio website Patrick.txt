========== HEADER ==========
.nav__logo
Patrick <span>Moz</span>

.nav__link
Home - About - Services - Projects - Contact


========== HOME ==========
.home__subtitle
Hello, <span>Iâ€™m</span>

.home__title
Patrick Moz

.home__education
Front-end Developer

.home__description
With knowledge in web development and 
design, I offer the best projects resulting 
in quality work.

.button
Let's Talk

.home__social
https://github.com/
https://dribbble.com/
https://www.linkedin.com/

.home__social-icon (clip-path)
polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%)


========== ABOUT ==========
.section__subtitle
My <span>Intro</span>

.section__title
About Me

.about__description
Frontend developer, I create web pages with 
UI / UX user interface, I have years of 
experience and many clients are happy with the 
projects carried out.

.button
Contact Me


========== SKILLS ==========
.section__subtitle
Favorite <span>Skills</span>

.section__title
My Skills

.skills__description
See fully what skills I have and perform, 
to develop the projects for you.

.button
See Projects

.skills__item
HTML & CSS
JavaScript
Bootstrap
React

Git & GitHub
Figma
Sketch


========== SERVICES ==========
.section__subtitle
My <span>Services

.section__title
What I Do

.services__title .services__description
Web Developer
Development of custom web pages. 
Using current technologies and 
libraries of the labor field.

UI/UX Designer
I offer design of web interfaces and 
mobile applications, design made in 
figma, adobe xd and sketch.

Graphic Design
I make designs at the client's request, 
banner design, posters, digital 
designs among others.


========== PROJECTS ==========
.section__subtitle
My <span>Jobs</span>

.section__title
Recent Projects

.projects__subtitle .projects__title .projects__button
Web
Modern website
View demo


========== CONTACT ==========
.section__subtitle
Get In <span>Touch</span>

.section__title
Contact Me

.contact__input (placeholder)
Enter your name
Enter your email
Enter your message

.button (type="submit")
Send Message


========== EMAIL JS CONTACT ==========
Before proceeding, I recommend creating your EmailJs account(https://www.emailjs.com/)

// serviceID - templateID - #form - publicKey

	// Show sent message

		Message sent successfully

	// Remove message after five seconds

	// Clear input fields

	// Show error message

		Message not sent (service error)


* Copy this code into your (Email Template)

Names: {{user_name}}

Email: {{user_email}}

Project: {{user_project}}

Best wishes,
EmailJS team


========== FOOTER ==========
.footer__title
Patrick <span>Moz</span>

.footer__education
Front-end Developer  

.footer__social-link
https://www.facebook.com/
https://www.instagram.com/
https://twitter.com/

.footer__copy
&#169; Copyright Bedimcode. All rights reserved

.footer__social-icon (clip-path)
polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%)





/*=============== SHOW MENU ===============*/
const navMenu = document.getElementById('nav-menu'),
      navToggle = document.getElementById('nav-toggle'),
      navClose = document.getElementById('nav-close')

/* Menu show */
if(navToggle){
    navToggle.addEventListener('click', () =>{
        navMenu.classList.add('show-menu')
    })
}

/* Menu hidden */
if(navClose){
    navClose.addEventListener('click', () =>{
        navMenu.classList.remove('show-menu')
    })
}

/*=============== REMOVE MENU MOBILE ===============*/
const navLink = document.querySelectorAll('.nav__link')

const linkAction = () =>{
    const navMenu = document.getElementById('nav-menu')
    // When we click on each nav__link, we remove the show-menu class
    navMenu.classList.remove('show-menu')
}
navLink.forEach(n => n.addEventListener('click', linkAction))

/*=============== CHANGE BACKGROUND HEADER ===============*/
const scrollHeader = () =>{
    const header = document.getElementById('header')
    // Add a class if the bottom offset is greater than 50 of the viewport
    this.scrollY >= 50 ? header.classList.add('scroll-header') 
                       : header.classList.remove('scroll-header')
}
window.addEventListener('scroll', scrollHeader)

/*=============== TESTIMONIAL SWIPER ===============*/
let testimonialSwiper = new Swiper(".testimonial-swiper", {
    spaceBetween: 30,
    loop: 'true',

    navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
    },
});

/*=============== NEW SWIPER ===============*/
let newSwiper = new Swiper(".new-swiper", {
    spaceBetween: 24,
    loop: 'true',

    breakpoints: {
        576: {
          slidesPerView: 2,
        },
        768: {
          slidesPerView: 3,
        },
        1024: {
          slidesPerView: 4,
        },
    },
});

/*=============== SCROLL SECTIONS ACTIVE LINK ===============*/
const sections = document.querySelectorAll('section[id]')
    
const scrollActive = () =>{
  	const scrollDown = window.scrollY

	sections.forEach(current =>{
		const sectionHeight = current.offsetHeight,
			  sectionTop = current.offsetTop - 58,
			  sectionId = current.getAttribute('id'),
			  sectionsClass = document.querySelector('.nav__menu a[href*=' + sectionId + ']')

		if(scrollDown > sectionTop && scrollDown <= sectionTop + sectionHeight){
			sectionsClass.classList.add('active-link')
		}else{
			sectionsClass.classList.remove('active-link')
		}                                                    
	})
}
window.addEventListener('scroll', scrollActive)

/*=============== SHOW SCROLL UP ===============*/ 
const scrollUp = () =>{
	const scrollUp = document.getElementById('scroll-up')
    // When the scroll is higher than 350 viewport height, add the show-scroll class to the a tag with the scrollup class
	this.scrollY >= 350 ? scrollUp.classList.add('show-scroll')
						: scrollUp.classList.remove('show-scroll')
}
window.addEventListener('scroll', scrollUp)

/*=============== SHOW CART ===============*/
const cart = document.getElementById('cart'),
      cartShop = document.getElementById('cart-shop'),
      cartClose = document.getElementById('cart-close')

/*===== CART SHOW =====*/
/* Validate if constant exists */
if(cartShop){
    cartShop.addEventListener('click', () =>{
        cart.classList.add('show-cart')
    })
}

/*===== CART HIDDEN =====*/
/* Validate if constant exists */
if(cartClose){
    cartClose.addEventListener('click', () =>{
        cart.classList.remove('show-cart')
    })
}

/*=============== DARK LIGHT THEME ===============*/ 
const themeButton = document.getElementById('theme-button')
const darkTheme = 'dark-theme'
const iconTheme = 'bx-sun'

// Previously selected topic (if user selected)
const selectedTheme = localStorage.getItem('selected-theme')
const selectedIcon = localStorage.getItem('selected-icon')

// We obtain the current theme that the interface has by validating the dark-theme class
const getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'
const getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'bx bx-moon' : 'bx bx-sun'

// We validate if the user previously chose a topic
if (selectedTheme) {
  // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark
  document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)
  themeButton.classList[selectedIcon === 'bx bx-moon' ? 'add' : 'remove'](iconTheme)
}

// Activate / deactivate the theme manually with the button
themeButton.addEventListener('click', () => {
    // Add or remove the dark / icon theme
    document.body.classList.toggle(darkTheme)
    themeButton.classList.toggle(iconTheme)
    // We save the theme and the current icon that the user chose
    localStorage.setItem('selected-theme', getCurrentTheme())
    localStorage.setItem('selected-icon', getCurrentIcon())
})